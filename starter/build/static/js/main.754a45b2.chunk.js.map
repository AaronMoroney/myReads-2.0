{"version":3,"sources":["shared/context/SelectorContext.js","shared/api/BooksAPI.js","features/goal/components/GoalModal.js","features/goal/components/ProgressBar.js","features/goal/components/GoalHeader.js","features/goal/components/Achieved.js","widgets/Goal/components/Goal.js","widgets/Goal/helpers/goal.js","features/selector/hooks/useBookSelector.js","shared/ui/components/Spinner.js","features/selector/components/Selector.js","features/book/components/Book.js","features/alert/components/Alert.js","features/book/components/BookDetail.js","features/alert/hooks/useAlert.js","features/bookshelf/components/Shelf.js","shared/ui/components/ActionButton.js","widgets/Library/components/Library.js","features/search/components/Results.js","features/search/components/SearchBar.js","widgets/Search/hooks/useSearch.js","widgets/Search/components/Search.js","widgets/SingleBook/components/SingleBook.js","app/components/App.js","widgets/Library/hooks/useLibrary.js","index.js"],"names":["SelectorContext","createContext","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","GoalModal","_ref","setIsEditing","setBookGoal","handleSaveGoalSettings","bookGoal","_jsx","className","onClick","handleCloseEdit","children","e","stopPropagation","_jsxs","decreaseGoal","prevgoal","type","value","readOnly","increaseGoal","ProgressBar","_Fragment","CircularProgressbarWithChildren","Infinity","circleRatio","styles","buildStyles","pathColor","rotation","strokeLinecap","trailColor","GoalHeader","handleOpenEdit","TuneIcon","config","angle","spread","startVelocity","elementCount","dragFriction","duration","stagger","width","height","perspective","colors","Achieved","achievedValue","Confetti","active","Goal","editing","useState","getFromLocalStorage","found","getItem","JSON","parse","setAchievedValue","read","useContext","calculateProgress","shelfState","filter","book","shelf","min","round","length","useEffect","setItem","useBookSelector","setShelfState","onUpdateSelector","useCallback","async","bookId","update","id","method","body","stringify","result","useMemo","Spinner","Selector","memo","showAlert","wantToRead","currentlyReading","stageUpdate","setStageUpdate","isLoading","setIsLoading","error","console","updateShelf","matchingBook","find","bookOnShelf","onChange","target","Book","properties","Link","to","state","style","backgroundImage","imageLinks","smallThumbnail","title","authors","Alert","isVisible","BookDetail","setIsVisible","timer","setTimeout","clearTimeout","useAlert","pageCount","publisher","Shelf","shelfName","map","ActionButton","Library","Results","errorState","SearchBar","handleInputChange","query","removeItem","placeholder","useSearch","setQuery","setResult","setErrorState","onQueryType","param","newQuery","onSearch","search","maxResults","Array","isArray","catch","Error","Search","SingleBook","_location$state","navigate","useNavigate","useLocation","App","fetchData","setRead","setCurrentlyReading","setWantToRead","useBookShelves","contextValue","Provider","Routes","Route","exact","path","element","ReactDOM","render","BrowserRouter","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.754a45b2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const SelectorContext = createContext([]);","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","\nimport '../../../css/App.css';\n\nconst GoalModal = ({setIsEditing, setBookGoal, handleSaveGoalSettings, bookGoal}) => {\n    const  handleCloseEdit = () => {\n        setIsEditing(false);\n    };\n    const increaseGoal = () => {\n        setBookGoal(prevgoal => prevgoal + 1)\n    }\n    const decreaseGoal = () => {\n        setBookGoal(prevgoal => prevgoal - 1)\n    }\n\n    return (\n        <div className=\"modal-overlay\" \n            onClick={handleCloseEdit}\n        >\n            <div \n                className=\"modal-content\" \n                onClick={e => e.stopPropagation()}\n            >\n                <div>\n                    <button onClick={decreaseGoal}>-</button>\n                    <input\n                        type=\"text\"\n                        aria-label='Book goal'\n                        value={bookGoal}\n                        readOnly\n                    />\n                    <button onClick={increaseGoal}>+</button>\n                    <button\n                        className=\"button-modal\" \n                        onClick={handleSaveGoalSettings}\n                    >\n                        Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GoalModal","import { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar'; //Library imports - https://www.npmjs.com/package/react-circular-progressbar\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst ProgressBar = ({value, bookGoal}) => {\n    return (\n        <>\n            <CircularProgressbarWithChildren\n                value={value === Infinity ? 0 : value}\n                circleRatio={0.5}\n                styles={buildStyles({\n                    pathColor: `rgba(248, 191, 48, ${100})`,\n                    rotation: 5/8 + 1 / 8, //this shows the ratation of the progress bar\n                    strokeLinecap: \"round\",\n                    trailColor: \"#eee\"\n                })}\n            >\n                <div className='progress-bar-info'>\n                    <h2 className='progress-bar-info-title'>{`${value === Infinity ? 0 : value}%`}</h2>\n                    <p>{`completed of  ${bookGoal} book goal`}</p>\n                </div>\n            </CircularProgressbarWithChildren>\n        </>\n    )\n}\n\nexport default ProgressBar","import TuneIcon from '@mui/icons-material/Tune'; //Icon library import - https://mui.com/material-ui/material-icons/?query=options\n\nconst GoalHeader = ({handleOpenEdit}) => {\n    return (\n        <>\n         <header className='goal-header' >\n                <div className='goal-header-text'>\n                    <h2 className='header-title'> Reading Goals</h2>\n                    <p>complete books, and see your stats soar!</p>\n                </div>\n                <button \n                    className='button'\n                    onClick={handleOpenEdit}\n                >\n                    <TuneIcon />\n                </button>\n            </header>\n        </>\n    )\n}\n\nexport default GoalHeader","import Confetti from 'react-dom-confetti';\n\nconst config = {\n  angle: 90,\n  spread: 360,\n  startVelocity: 40,\n  elementCount: \"175\",\n  dragFriction: 0.12,\n  duration: 3000,\n  stagger: 3,\n  width: \"10px\",\n  height: \"10px\",\n  perspective: \"500px\",\n  colors: [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"]\n};\n\nconst Achieved = ({ achievedValue }) => {\n  return <Confetti active={ achievedValue === 100 ? true : false } config={ config }/>\n}\n\nexport default Achieved;","import { useState, useContext, useEffect } from 'react';\n\nimport '../../../css/App.css';\nimport { SelectorContext } from '../../../shared/context/SelectorContext';\nimport { GoalModal } from '../../../features/goal';\nimport { ProgressBar } from '../../../features/goal';\nimport { GoalHeader } from '../../../features/goal';\nimport { Achieved } from '../../../features/goal';\nimport { getFromLocalStorage, calculateProgress } from '../helpers/goal';\n\nconst Goal = () => {\n    const [editing, setIsEditing] = useState(false);\n    const [bookGoal, setBookGoal] = useState(getFromLocalStorage());\n    const [achievedValue, setAchievedValue] = useState(0)\n\n    const { read } = useContext(SelectorContext);\n    \n    const value = calculateProgress(read, bookGoal);\n\n    const handleOpenEdit = () => {\n        setIsEditing(true);\n    };\n    \n    const handleSaveGoalSettings = () => {\n        localStorage.setItem('goal', bookGoal);\n        setAchievedValue(value);\n        setIsEditing(false); \n    }\n\n    useEffect(() => {\n        setAchievedValue(value);\n    }, [value]);\n    \n    return (\n        <div className='bookshelf goal-background'>\n            <GoalHeader\n                handleOpenEdit={handleOpenEdit}\n            />\n            <div className='goal-container'>\n                {editing && (\n                    <GoalModal \n                        setIsEditing={setIsEditing}\n                        setBookGoal={setBookGoal}\n                        handleSaveGoalSettings={handleSaveGoalSettings}\n                        bookGoal={bookGoal}\n                    />\n                )}\n                <Achieved \n                    achievedValue={achievedValue}\n                />\n                <section className='progress-container'>\n                    <ProgressBar \n                        value={value}\n                        bookGoal={bookGoal}\n                    />\n                </section>\n            </div>\n        </div>    \n    )\n}\n\nexport default Goal","//move into helpers\nexport const getFromLocalStorage = () => {\n    let found = localStorage.getItem('goal');\n    return found === null ? 0 : JSON.parse(found);\n}\n\nexport const calculateProgress = (shelfState, bookGoal) => {\n    if(!shelfState || bookGoal === 0) {\n        return 0;\n    } \n\n    const read = shelfState?.filter(book => book.shelf === 'read');\n    return Math.min(100, Math.round(read.length / bookGoal * 100));\n}","import {useCallback, useMemo, useContext} from 'react'\n\nimport { update, getAll } from '../../../shared/api/BooksAPI';\nimport { SelectorContext } from '../../../shared/context/SelectorContext';\n\nexport function useBookSelector() {\n  const { setShelfState } = useContext(SelectorContext);\n  // const { wantToRead, read, currentlyReading } = useContext(SelectorContext);\n  \n  const onUpdateSelector = useCallback(async (bookId, shelf) => {\n    await update(bookId, shelf);\n    let result = await getAll(); \n    await setShelfState(result);\n  },[setShelfState])\n\n  return useMemo (\n    () => ({\n      onUpdateSelector,\n    }), \n    [ onUpdateSelector ]\n  ) \n}\n","import React from 'react'\n\nimport '../../../css/App.css'\nexport default function Spinner() {\n  return (\n    <div className='book-shelf-changer-spinner'>\n       <div className='spinner'></div>\n    </div>\n  )\n}","import { useContext, useEffect, useState, memo } from 'react';\n\nimport '../../../css/App.css'\nimport { SelectorContext } from '../../../shared/context/SelectorContext.js'\nimport { useBookSelector } from '../hooks/useBookSelector.js'\nimport Spinner from '../../../shared/ui/components/Spinner.js';\n\nconst Selector = memo(({ book, shelf ,showAlert }) => {\n    const { read, wantToRead, currentlyReading } = useContext(SelectorContext);\n    \n    const [ stageUpdate, setStageUpdate ] = useState('');\n    const [ isLoading, setIsLoading ] = useState(false);\n\n    const { onUpdateSelector } = useBookSelector();\n\n    const handleChange = async (e) => {\n        setStageUpdate(e.target.value);\n    };\n    \n    useEffect(() => {\n        const updateShelf = async () => {\n          setIsLoading(true);\n          try {\n            await onUpdateSelector(book, stageUpdate);\n            if (showAlert) {\n                showAlert();\n            }\n          } catch (error) {\n            console.error('Error updating shelf:', error);\n          } finally {\n            setIsLoading(false)\n          }\n        };\n        if (stageUpdate) {\n          updateShelf();\n        }\n        \n    }, [book, stageUpdate, onUpdateSelector, showAlert ]);\n\n    const shelves = [...wantToRead, ...read, ...currentlyReading];\n    const matchingBook = shelves.find(bookOnShelf => bookOnShelf.id === book.id);\n\n    if (isLoading) {\n        return <Spinner/>; \n    }\n\n    return (\n        <>\n            <div className=\"book-shelf-changer\">\n                <select \n                    value={matchingBook ? matchingBook.shelf : 'none'}\n                    onChange={handleChange}\n                >\n                    <option value=\"none\">\n                        Move to...\n                    </option>\n                    <option value=\"currentlyReading\">\n                        Currently Reading\n                    </option>\n                    <option value=\"wantToRead\">\n                        Want to Read\n                    </option>\n                    <option value=\"read\">\n                        Read\n                    </option>\n                </select>\n            </div>\n        </>\n    )\n}) \n\nexport default Selector","import { Link } from 'react-router-dom'\nimport { memo } from 'react'\n\nimport '../../../css/App.css'\nimport { Selector } from '../../selector'\n\nconst Book = memo(({ properties }) => {\n    return (\n        <>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                <Link \n                    to={`/books/${properties.id}`} \n                    state={{properties}}\n                >\n                    <div\n                        className=\"book-cover\"\n                        style={{\n                        width: 128,\n                        height: 193,\n                        backgroundImage:\n                            `url(\"${properties.imageLinks.smallThumbnail}\")`\n                        }}\n                    /> \n                </Link>\n                <div>\n                    <Selector \n                        book={properties}\n                        shelf={properties.shelf}\n                    />\n                </div>       \n                </div>\n                <div className=\"book-title\">\n                    {properties.title}\n                </div>\n                <div className=\"book-authors\">\n                    {properties.authors}\n                </div>\n            </div>\n        </>\n    )\n});\n\nexport default Book","const Alert = ({ title, isVisible }) => {\n    return (\n        <>\n            <div className={`alert ${isVisible ? 'show' : ''}`}>\n                {` '${title}' has been successfully moved!`}\n            </div>\n        </>\n    )\n}\n\nexport default Alert","import '../../../css/App.css'\nimport Alert from '../../alert/components/Alert';\nimport { Selector } from '../../selector';\nimport { useAlert } from '../../alert/hooks/useAlert';\n\nconst BookDetail = ({ properties }) => {\n    const { showAlert, isVisible } = useAlert();\n\n    return (\n        <>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                    <div\n                        className=\"book-cover\"\n                        style={{\n                            width: 128,\n                            height: 193,\n                            backgroundImage: `url(\"${properties.imageLinks.smallThumbnail}\")`\n                        }}\n                    /> \n                    <div>\n                        <Selector \n                            book={properties}\n                            shelf={properties.shelf}\n                            showAlert={showAlert}\n                        />\n                    </div>       \n                </div>\n                <div className=\"book-title\">\n                    {properties.title}\n                </div>\n                <div className=\"book-authors\">\n                    {properties.authors}\n                </div>\n                {/* some other info */}\n                <div className=\"book-authors\">\n                    {properties.pageCount} pages\n                </div>\n                <div className=\"book-authors\">\n                    published by {properties.publisher}\n                </div>\n                <Alert \n                    title={properties.title}\n                    shelf={properties.shelf}\n                    isVisible={isVisible}\n                />\n            </div>    \n        </>\n    )\n}\n\nexport default BookDetail","import {useCallback, useMemo, useState} from 'react'\n\nexport function useAlert() {\n  const [isVisible, setIsVisible] = useState('');\n\n  const showAlert = useCallback(() => {\n    setIsVisible(true);\n    const timer = setTimeout(() => {\n        setIsVisible(false);\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return useMemo (\n    () => ({\n        showAlert, \n        isVisible\n    }), \n    [ showAlert, isVisible]\n  ) \n}\n","import { memo } from 'react';\n\nimport { Book } from '../../book/';\n\nconst Shelf = memo(({ shelfName, properties }) => {\n  return (\n    <div>\n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{shelfName}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n            {\n              properties.map(( book ) => {\n                //each book will receive an obj w/ its properties\n                return (\n                  <li key={ book.id }>\n                    <Book \n                      properties={ book }\n                    />\n                  </li>\n                )\n              })\n            }\n          </ol>\n        </div>\n      </div> \n    </div>\n  )\n});\n\nexport default Shelf","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst ActionButton = () =>  {\n  return (\n    <>\n        <div className=\"open-search\">\n            <Link\n                to=\"/search\"\n            >\n            Add a book\n            </Link>\n        </div> \n    </>\n  )\n}\n\nexport default ActionButton","import { useContext } from 'react';\n\nimport '../../../css/App.css';\nimport { Goal } from '../../Goal';\nimport { Shelf } from '../../../features/bookshelf'\nimport { ActionButton } from '../../../shared/ui';\nimport { SelectorContext } from '../../../shared/context/SelectorContext';\n\nconst Library = () => {\n    const { currentlyReading, wantToRead, read } = useContext(SelectorContext);\n\n    return (\n        <>\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        <Shelf \n                            shelfName={'Currently Reading'}\n                            properties={currentlyReading}\n                        />\n                        <Shelf \n                            shelfName={'Want To read'}\n                            properties={wantToRead}\n                        />\n                        <Shelf \n                            shelfName={'Read'}\n                            properties={read}\n                        />\n                        <div className='widget-container'>\n                            <Goal />\n                        </div>\n                    </div>\n                </div>\n            </div> \n            <ActionButton />\n        </>     \n    )\n}\n\nexport default Library","import React from 'react'\n\nimport '../../../css/App.css'\nimport { Book } from '../../book'\n\nconst Results = ({result, errorState}) => {\n  return (\n    <>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {errorState ? \n            <p>due to API Limitations, there are no results for your query</p> \n            : (result.map(book => \n              <Book \n                properties={book} \n                key={book.id}\n              />\n            ))\n          }\n        </ol>\n      </div>\n    </>\n  )\n}\n\nexport default Results","import { Link } from 'react-router-dom'\n\nimport '../../../css/App.css'\n\nconst SearchBar = ({handleInputChange, query}) => {\n  return (\n    <>\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link \n            onClick={() => localStorage.removeItem('storedQuery')}\n            to='/'\n            className=\"close-search\"\n          >\n            Close\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input\n              onChange={handleInputChange}\n              type=\"text\"\n              placeholder={query ? query : \"Search by title, author, or ISBN\"}\n              value={query ? query : \"\"}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default SearchBar","import {useState, useCallback, useMemo } from 'react'\n\nimport { search } from '../../../shared/api/BooksAPI';\n\nexport function useSearch() {\n  const [query, setQuery] = useState(localStorage.getItem('storedQuery')) //initialised with ''\n  const [result, setResult] = useState([]);\n  const [errorState, setErrorState] = useState(false);\n\n  const onQueryType = useCallback((param) => {\n    const newQuery = param.target.value;\n    setQuery(newQuery);\n    localStorage.setItem('storedQuery', newQuery);\n  },[])\n\n  const onSearch = useCallback(async () => {\n    if(query === null) {\n      return\n    }\n\n    if(query !== '') {\n      search(query)\n      .then(data => {\n        if (Array.isArray(data)) {\n          setResult(data);\n          setErrorState(false);\n        } else {\n          // If not an array, no results found because of API limitations\n          setResult([]);\n          setErrorState(true);\n        }\n      })\n      .catch(error => {\n        console.error('error', Error);\n      })\n    }\n  },[query])\n\n return useMemo (\n    () => ({\n      onSearch, \n      onQueryType,\n      setQuery, \n      result, \n      errorState, \n      query, \n    }), \n    [onSearch, setQuery, onQueryType, result, errorState, query]\n  ) \n}","import { useEffect } from 'react';\n\nimport { SearchBar } from '../../../features/search'\nimport { Results } from '../../../features/search'\nimport { useSearch } from '../../../widgets/Search/hooks/useSearch'\n\nconst Search = () => {\n    const { onSearch, setQuery, result, errorState, query, onQueryType} = useSearch();\n\n    const handleInputChange = (e) => {\n        onQueryType(e);\n    }\n    \n    useEffect(() => {\n        onSearch(query);\n    },[onSearch, query]);\n\n    return (\n        <>\n            <SearchBar\n                setQuery={setQuery}\n                handleInputChange={handleInputChange}\n                query={query}\n            />\n            <Results\n                result={result}\n                errorState={errorState}\n            /> \n        </>\n    )\n}\n\nexport default Search","import React from 'react'\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\n\nimport '../../../css/App.css';\nimport { BookDetail } from '../../../features/book'\nimport { ActionButton } from '../../../shared/ui';\n\nconst SingleBook = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const properties = location.state?.properties;\n\n  return (\n    <>\n      <div className=\"list-books\">\n        <Link \n          onClick={() => navigate(-1)} //goes to previous page\n          className=\"close-search\"\n        >\n          back\n        </Link>\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n          <div className=\"bookshelf\">\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {\n                  properties && (\n                    <BookDetail \n                      properties={properties}\n                    />\n                  ) \n                }\n              </ol>\n            </div>\n          </div>\n        </div>\n      <ActionButton />\n    </>\n  )\n}\n\nexport default SingleBook","import { Route, Routes} from 'react-router-dom'\nimport { useEffect, useState, useMemo} from 'react';\n\nimport '../../css/App.css';\nimport { SelectorContext } from '../../shared/context/SelectorContext.js';\nimport { useBookShelves } from '../../widgets/Library/hooks/useLibrary.js';\nimport { getAll } from '../../shared/api/BooksAPI.js';\nimport  Library  from '../../widgets/Library/components/Library.js';\nimport  Search from '../../widgets/Search/components/Search.js'\nimport  SingleBook  from '../../widgets/SingleBook/components/SingleBook.js';\n\nfunction App() {\n  const [shelfState, setShelfState] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      let result = await getAll();\n      setShelfState(result);\n    }\n    fetchData();\n  }, []);\n\n  const { read, wantToRead,  currentlyReading, } = useBookShelves(shelfState);\n\n  const contextValue = useMemo(() => ({ read,  wantToRead,   currentlyReading, setShelfState }), \n    [read, currentlyReading, wantToRead, setShelfState]\n  );\n\n  return (\n    <SelectorContext.Provider value={contextValue}>\n      <div className=\"app\">\n        <Routes>\n          <Route \n            exact path='/' \n            element={<Library />}\n          />\n          <Route \n            exact path='/search' \n            element={<Search />}\n          /> \n          <Route \n            exact path='/books/:id' \n            element={<SingleBook />}\n          />\n        </Routes>\n      </div>\n    </SelectorContext.Provider>\n  );\n}\n\nexport default App;","import { useState, useEffect, useMemo} from 'react';\n\nexport const useBookShelves = (shelfState) => {\n    const [read, setRead] = useState([]);\n    const [currentlyReading, setCurrentlyReading] = useState([]);\n    const [wantToRead, setWantToRead] = useState([]);\n\n    useEffect(() => {\n        setRead(shelfState?.filter(book => book.shelf === 'read'));\n        setCurrentlyReading(shelfState?.filter(book => book.shelf === 'currentlyReading'));\n        setWantToRead(shelfState?.filter(book => book.shelf === 'wantToRead'));\n    }, [shelfState]);\n\n    // const shelves = [read: read, currentlyReading, wantToRead];\n\n    // console.log(shelves);\n\n    return useMemo (\n        () => ({\n            read, \n            currentlyReading, \n            wantToRead, \n            setRead, \n            setCurrentlyReading, \n            setWantToRead, \n        }), \n        [ read, setRead, wantToRead, setWantToRead,  currentlyReading, setCurrentlyReading ]\n    ) \n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter} from 'react-router-dom'\nimport \"./css/index.css\"\nimport { App } from './app';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}